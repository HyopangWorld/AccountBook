package accountBook;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.Calendar;
import java.util.GregorianCalendar;

import javax.swing.*;

class CalenderDataMenager{ // 6*7배열에 나타낼 달력 값을 구하는 class
	static final int CAL_WIDTH = 7;
	final static int CAL_HEIGHT = 6;
	int calDates[][] = new int[CAL_HEIGHT][CAL_WIDTH];
	int calYear;
	int calMonth;
	int calDayOfMon;
	final int calLastDateOfMonth[]={31,28,31,30,31,30,31,31,30,31,30,31};
	int calLastDate;
	Calendar today = Calendar.getInstance();
	Calendar cal;
	
	public CalenderDataMenager(){ 
		setToday(); 
	}
	public void setToday(){
		calYear = today.get(Calendar.YEAR); 
		calMonth = today.get(Calendar.MONTH);
		calDayOfMon = today.get(Calendar.DAY_OF_MONTH);
		makeCalData(today);
	}
	private void makeCalData(Calendar cal){
		// 1일의 위치와 마지막 날짜를 구함 
		int calStartingPos = (cal.get(Calendar.DAY_OF_WEEK)+7-(cal.get(Calendar.DAY_OF_MONTH))%7)%7;
		if(calMonth == 1) calLastDate = calLastDateOfMonth[calMonth] + leapCheck(calYear);
		else calLastDate = calLastDateOfMonth[calMonth];
		// 달력 배열 초기화
		for(int i = 0 ; i<CAL_HEIGHT ; i++){
			for(int j = 0 ; j<CAL_WIDTH ; j++){
				calDates[i][j] = 0;
			}
		}
		// 달력 배열에 값 채워넣기
		for(int i = 0, num = 1, k = 0 ; i<CAL_HEIGHT ; i++){
			if(i == 0) k = calStartingPos;
			else k = 0;
			for(int j = k ; j<CAL_WIDTH ; j++){
				if(num <= calLastDate) calDates[i][j]=num++;
			}
		}
	}
	private int leapCheck(int year){ // 윤년인지 확인하는 함수
		if(year%4 == 0 && year%100 != 0 || year%400 == 0) return 1;
		else return 0;
	}
	public void moveMonth(int mon){ // 현재달로 부터 n달 전후를 받아 달력 배열을 만드는 함수(1년은 +12, -12달로 이동 가능)
		calMonth += mon;
		if(calMonth>11) while(calMonth>11){
			calYear++;
			calMonth -= 12;
		} else if (calMonth<0) while(calMonth<0){
			calYear--;
			calMonth += 12;
		}
		cal = new GregorianCalendar(calYear,calMonth,calDayOfMon);
		makeCalData(cal);
	}
}

public class AccountBook_Calender extends CalenderDataMenager{ // CalendarDataManager의 GUI + 메모기능 + 시계
	// 창 구성요소와 배치도
	JFrame mainFrame;
	
	JPanel calOpPanel;
		JButton todayBut;
		JLabel todayLab;
		JButton MonClosing;
		JButton YearClosing;
		JButton lYearBut;
		JButton lMonBut;
		JButton Share;
		JLabel curMMYYYYLab;
		JButton nMonBut;
		JButton nYearBut;
		ListenForCalOpButtons lForCalOpButtons = new ListenForCalOpButtons();
		ButtonListener ClosingButtons = new ButtonListener();
	
	JPanel calPanel;
		JButton weekDaysName[];
		JButton dateButs[][] = new JButton[6][7];
		listenForDateButs lForDateButs = new listenForDateButs(); 
	
	JPanel infoPanel;
		JLabel infoClock;
	
	JPanel sidePanel;
		JLabel selectedDate;
		JPanel tosidePanel;
		JButton update;
		JButton delete;
		JButton btn_add;
		
	
	JPanel frameBottomPanel;
		JLabel bottomInfo = new JLabel("동아리 회계 장부");
	//상수, 메세지
	final String WEEK_DAY_NAME[] = { "SUN", "MON", "TUE", "WED", "THR", "FRI", "SAT" };
	final String title = "달력";
	private JPanel menubar;
	private JButton home;
	private JButton pounder;
	private JButton calculator;
	private JButton mypage;
	private JScrollPane scroll;

	public static void main(String[] args){
		SwingUtilities.invokeLater(new Runnable(){
			public void run(){
				new AccountBook_Calender();
			}
		});
	}
	public AccountBook_Calender(){ //구성요소 순으로 정렬되어 있음. 각 판넬 사이에 빈줄로 구별
		
		mainFrame = new JFrame(title);
		mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mainFrame.setSize(1500,900);
		mainFrame.setLocationRelativeTo(null);
		mainFrame.setResizable(false);
		try{
			UIManager.setLookAndFeel ("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");//LookAndFeel Windows 스타일 적용
			SwingUtilities.updateComponentTreeUI(mainFrame) ;
		}catch(Exception e){
			bottomInfo.setText("ERROR : LookAndFeel setting failed");
		}
		
		calOpPanel = new JPanel();
		calOpPanel.setBounds(0, 0, 1008, 77);
			todayBut = new JButton("Today");
			todayBut.setToolTipText("Today");
			todayBut.addActionListener(lForCalOpButtons);
			todayLab = new JLabel(today.get(Calendar.MONTH)+1+"/"+today.get(Calendar.DAY_OF_MONTH)+"/"+today.get(Calendar.YEAR));
			MonClosing = new JButton("월별결산");
			MonClosing.addActionListener(ClosingButtons);
			YearClosing = new JButton("연별결산");
			YearClosing.addActionListener(ClosingButtons);
			Share = new JButton("공유");
			Share.addActionListener(ClosingButtons);
			lYearBut = new JButton("<<");
			lYearBut.setToolTipText("Previous Year");
			lYearBut.addActionListener(lForCalOpButtons);
			lMonBut = new JButton("<");
			lMonBut.setToolTipText("Previous Month");
			lMonBut.addActionListener(lForCalOpButtons);
			curMMYYYYLab = new JLabel("<html><table width=100><tr><th><font size=5>"+((calMonth+1)<10?"&nbsp;":"")+(calMonth+1)+" / "+calYear+"</th></tr></table></html>");
			nYearBut = new JButton(">>");
			nYearBut.setToolTipText("Next Year");
			nYearBut.addActionListener(lForCalOpButtons);
			GridBagLayout gbl_calOpPanel = new GridBagLayout();
			gbl_calOpPanel.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0};
			gbl_calOpPanel.rowHeights = new int[]{15, 31, 0, 0};
			calOpPanel.setLayout(gbl_calOpPanel);
			//calOpPanel.add(nYearBut,calOpGC);
		
		calPanel=new JPanel();
		calPanel.setBounds(0, 87, 1008, 611);
			weekDaysName = new JButton[7];
			for(int i=0 ; i<CAL_WIDTH ; i++){
				weekDaysName[i]=new JButton(WEEK_DAY_NAME[i]);
				weekDaysName[i].setBorderPainted(false);
				weekDaysName[i].setContentAreaFilled(false);
				weekDaysName[i].setForeground(Color.WHITE);
				if(i == 0) weekDaysName[i].setBackground(new Color(200, 50, 50));
				else if (i == 6) weekDaysName[i].setBackground(new Color(50, 100, 200));
				else weekDaysName[i].setBackground(new Color(150, 150, 150));
				weekDaysName[i].setOpaque(true);
				weekDaysName[i].setFocusPainted(false);
				calPanel.add(weekDaysName[i]);
			}
			for(int i=0 ; i<CAL_HEIGHT ; i++){
				for(int j=0 ; j<CAL_WIDTH ; j++){
					dateButs[i][j]=new JButton();
					dateButs[i][j].setBorderPainted(false);
					dateButs[i][j].setContentAreaFilled(false);
					dateButs[i][j].setBackground(Color.WHITE);
					dateButs[i][j].setOpaque(true);
					dateButs[i][j].addActionListener(lForDateButs);
					calPanel.add(dateButs[i][j]);
				}
			}
			calPanel.setLayout(new GridLayout(0,7,2,2));
			calPanel.setBorder(BorderFactory.createEmptyBorder(0, 3, 0, 3));
			showCal(); // 달력을 표시
						
		infoPanel = new JPanel();
		infoPanel.setBounds(0, 0, 365, 20);
			infoPanel.setLayout(null);
			infoClock = new JLabel("", SwingConstants.RIGHT);
			infoClock.setBounds(0, 0, 333, 20);
			infoClock.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
			infoPanel.add(infoClock);
			selectedDate = new JLabel("<Html><font size=3>"+(today.get(Calendar.MONTH)+1)+"/"+today.get(Calendar.DAY_OF_MONTH)+"/"+today.get(Calendar.YEAR)+"&nbsp;(Today)</html>", SwingConstants.LEFT);
			selectedDate.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 0));

		//calOpPanel, calPanel을  frameSubPanelWest에 배치
		JPanel frameSubPanelWest = new JPanel();
		frameSubPanelWest.setBounds(0, 52, 995, 699);
		Dimension calOpPanelSize = calOpPanel.getPreferredSize();
		calOpPanelSize.height = 90;
		frameSubPanelWest.setLayout(null);
		calOpPanel.setPreferredSize(calOpPanelSize);
		frameSubPanelWest.add(calOpPanel);
		nYearBut = new JButton(">>");
		nYearBut.setToolTipText("Next Year");
		nYearBut.addActionListener(lForCalOpButtons);
		
		GridBagConstraints calOpGC = new GridBagConstraints();
		calOpGC.gridheight = 2;
		calOpGC.gridx = 5;
		calOpGC.gridy = 2;
		calOpGC.weightx = 1;
		calOpGC.weighty = 1;
		calOpGC.insets = new Insets(5, 5, 5, 0);
		calOpGC.gridx = 1;
		calOpGC.gridy = 0;
		calOpPanel.add(todayBut,calOpGC);
		calOpGC.gridx = 2;
		calOpGC.gridy = 0;
		calOpPanel.add(MonClosing,calOpGC);
		calOpGC.gridx = 3;
		calOpGC.gridy = 0;
		calOpPanel.add(YearClosing,calOpGC);
		calOpGC.gridx = 4;
		calOpGC.gridy = 0;
		calOpPanel.add(Share,calOpGC);	
		calOpGC.gridx = 1;
		calOpGC.gridy = 2;
		calOpPanel.add(lYearBut,calOpGC);
		calOpGC.gridx = 2;
		calOpGC.gridy = 2;
		calOpPanel.add(lMonBut,calOpGC);
		calOpGC.gridx = 3;
		calOpGC.gridy = 2;
		calOpPanel.add(todayLab,calOpGC);
		calOpGC.gridx = 5;
		calOpGC.gridx = 2;
		nMonBut = new JButton(">");
		nMonBut.setToolTipText("Next Month");
		nMonBut.addActionListener(lForCalOpButtons);
		calOpPanel.add(nMonBut,calOpGC);
		GridBagConstraints gbc_nMonBut = new GridBagConstraints();
		gbc_nMonBut.insets = new Insets(0, 0, 5, 0);
		gbc_nMonBut.gridx = 5;
		gbc_nMonBut.gridy = 2;
		calOpPanel.add(nMonBut, gbc_nMonBut);
		calOpGC.gridx = 6;
		calOpGC.gridy = 2;
		calOpPanel.add(nYearBut,calOpGC);
		frameSubPanelWest.add(calPanel);

		//infoPanel, sidePanel을  frameSubPanelEast에 배치
		JPanel frameSubPanelEast = new JPanel();
		frameSubPanelEast.setBounds(1007, 52, 365, 661);
		Dimension infoPanelSize=infoPanel.getPreferredSize();
		infoPanelSize.height = 50;
		infoPanelSize.setSize(50, 100);
		infoPanel.setPreferredSize(infoPanelSize);
		Dimension sidePanelSize = sidePanel.getPreferredSize();
		sidePanel.setSize(new Dimension(1298, 677));
		frameSubPanelEast.setLayout(null);
		frameSubPanelEast.add(infoPanel);
		sidePanel=new JPanel();
		sidePanel.setLocation(0, 21);
			sidePanel.setBorder(BorderFactory.createTitledBorder("오늘의 이벤트"));
			sidePanel.setLayout(null);
			btn_add = new JButton("+");
			btn_add.setBounds(274, 10, 63, 35);
			sidePanel.add(btn_add);
			//btn_add.addActionListener(new Add());//여기에 액션리스너 이름 써줘!!
			
		frameSubPanelEast.add(sidePanel);
		tosidePanel = new JPanel();
		tosidePanel.setBounds(33, 55, 304, 143);
		tosidePanel.setBackground(Color.white);
		scroll = new JScrollPane(tosidePanel);
		update = new JButton("수정");
		update.setBounds(235, 40, 57, 23);
		delete = new JButton("삭제");
		delete.setBounds(235, 73, 57, 23);
		tosidePanel.setLayout(null);
		tosidePanel.add(update);
		tosidePanel.add(delete);
		//sidePanel.add(tosidePanel);
		
		JTextArea textArea = new JTextArea();
		textArea.setBackground(Color.ORANGE);
		textArea.setBounds(12, 10, 207, 123);
		tosidePanel.add(textArea);
		
		Dimension frameSubPanelWestSize = frameSubPanelWest.getPreferredSize();
		frameSubPanelWestSize.width = 1000;
		frameSubPanelWest.setPreferredSize(frameSubPanelWestSize);
		
		//뒤늦게 추가된 bottom Panel..
		frameBottomPanel = new JPanel();
		frameBottomPanel.setBounds(0, 726, 1372, 25);
		frameBottomPanel.add(bottomInfo);
		mainFrame.getContentPane().setLayout(null);
		
		menubar = new JPanel();
		menubar.setBounds(0, 0, 1372, 49);
		mainFrame.getContentPane().add(menubar);
		menubar.setLayout(null);
		
		home = new JButton("홈");
		home.setBounds(136, 10, 117, 35);
		menubar.add(home);
		
		pounder = new JButton("낸 사람 안 낸 사람");
		pounder.setBounds(437, 10, 117, 35);
		menubar.add(pounder);
		
		calculator = new JButton("더치페이계산기");
		calculator.setBounds(767, 10, 117, 35);
		menubar.add(calculator);
		
		mypage = new JButton("마이페이지");
		mypage.setBounds(1084, 10, 117, 35);
		menubar.add(mypage);
		mainFrame.getContentPane().add(frameSubPanelWest);
		mainFrame.getContentPane().add(frameSubPanelEast);
		mainFrame.getContentPane().add(frameBottomPanel);
		mainFrame.setVisible(true);

		focusToday(); //현재 날짜에 focus를 줌 (mainFrame.setVisible(true) 이후에 배치해야함)
		
		//Thread 작동(시계, bottomMsg 일정시간후 삭제)
		ThreadConrol threadCnl = new ThreadConrol();
		threadCnl.start();	
	}
	
	private void focusToday(){
		if(today.get(Calendar.DAY_OF_WEEK) == 1)
			dateButs[today.get(Calendar.WEEK_OF_MONTH)][today.get(Calendar.DAY_OF_WEEK)-1].requestFocusInWindow();
		else
			dateButs[today.get(Calendar.WEEK_OF_MONTH)-1][today.get(Calendar.DAY_OF_WEEK)-1].requestFocusInWindow();
	}
	
	private void showCal(){
		for(int i=0;i<CAL_HEIGHT;i++){
			for(int j=0;j<CAL_WIDTH;j++){
				String fontColor="black";
				if(j==0) fontColor="red";
				else if(j==6) fontColor="blue";
				
				File f =new File("MemoData/"+calYear+((calMonth+1)<10?"0":"")+(calMonth+1)+(calDates[i][j]<10?"0":"")+calDates[i][j]+".txt");
				if(f.exists()){
					dateButs[i][j].setText("<html><b><font color="+fontColor+">"+calDates[i][j]+"</font></b></html>");
				}
				else dateButs[i][j].setText("<html><font color="+fontColor+">"+calDates[i][j]+"</font></html>");

				JLabel todayMark = new JLabel("<html><font color=green>*</html>");
				dateButs[i][j].removeAll();
				if(calMonth == today.get(Calendar.MONTH) &&
						calYear == today.get(Calendar.YEAR) &&
						calDates[i][j] == today.get(Calendar.DAY_OF_MONTH)){
					dateButs[i][j].add(todayMark);
					dateButs[i][j].setToolTipText("Today");
				}
				
				if(calDates[i][j] == 0) dateButs[i][j].setVisible(false);
				else dateButs[i][j].setVisible(true);
			}
		}
	}
	private class ButtonListener extends JFrame implements ActionListener{
		public void actionPerformed(ActionEvent e){
			if(e.getSource()==MonClosing){
				JPanel MCpanel = new JPanel();
				JFrame MCframe = new JFrame();
				JLabel MClabel = new JLabel("월별결산");
				add(MCpanel.add(MCframe.getContentPane().add(MClabel)));
				setSize(200,350);
				setLocation(50,5);
				setVisible(true);
			}
			else if(e.getSource()==YearClosing){
				JPanel YCpanel = new JPanel();
				JFrame YCframe = new JFrame();
				JLabel YClabel = new JLabel("연별결산");
				add(YCpanel.add(YCframe.getContentPane().add(YClabel)));
				setSize(200,350);
				setLocation(80,5);
				setVisible(true);
			}//여기에 패널 추가하는 소스
			//else if(e.getSource()==btn_add){
//				new Input_gui(id);
//			}
			
			
		}
	}
	private class ListenForCalOpButtons implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			if(e.getSource() == todayBut){
				setToday();
				lForDateButs.actionPerformed(e);
				focusToday();
			}
			else if(e.getSource() == lYearBut) moveMonth(-12);
			else if(e.getSource() == lMonBut) moveMonth(-1);
			else if(e.getSource() == nMonBut) moveMonth(1);
			else if(e.getSource() == nYearBut) moveMonth(12);
			
			curMMYYYYLab.setText("<html><table width=100><tr><th><font size=5>"+((calMonth+1)<10?"&nbsp;":"")+(calMonth+1)+" / "+calYear+"</th></tr></table></html>");
			showCal();
		}
	}
	private class listenForDateButs implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			int k=0,l=0;
			for(int i=0 ; i<CAL_HEIGHT ; i++){
				for(int j=0 ; j<CAL_WIDTH ; j++){
					if(e.getSource() == dateButs[i][j]){ 
						k=i;
						l=j;
					}
				}
			}
	
			if(!(k ==0 && l == 0)) calDayOfMon = calDates[k][l]; //today버튼을 눌렀을때도 이 actionPerformed함수가 실행되기 때문에 넣은 부분

			cal = new GregorianCalendar(calYear,calMonth,calDayOfMon);
			
			String dDayString = new String();
			int dDay=((int)((cal.getTimeInMillis() - today.getTimeInMillis())/1000/60/60/24));
			if(dDay == 0 && (cal.get(Calendar.YEAR) == today.get(Calendar.YEAR)) 
					&& (cal.get(Calendar.MONTH) == today.get(Calendar.MONTH))
					&& (cal.get(Calendar.DAY_OF_MONTH) == today.get(Calendar.DAY_OF_MONTH))) dDayString = "Today"; 
			else if(dDay >=0) dDayString = "D-"+(dDay+1);
			else if(dDay < 0) dDayString = "D+"+(dDay)*(-1);
			
			selectedDate.setText("<Html><font size=3>"+(calMonth+1)+"/"+calDayOfMon+"/"+calYear+"&nbsp;("+dDayString+")</html>");
		}
	}
	
	private class ThreadConrol extends Thread{
		public void run(){
			boolean msgCntFlag = false;
			int num = 0;
			String curStr = new String();
			while(true){
				try{
					today = Calendar.getInstance();
					String amPm = (today.get(Calendar.AM_PM)==0?"AM":"PM");
					String hour;
							if(today.get(Calendar.HOUR) == 0) hour = "12"; 
							else if(today.get(Calendar.HOUR) == 12) hour = " 0";
							else hour = (today.get(Calendar.HOUR)<10?" ":"")+today.get(Calendar.HOUR);
					String min = (today.get(Calendar.MINUTE)<10?"0":"")+today.get(Calendar.MINUTE);
					String sec = (today.get(Calendar.SECOND)<10?"0":"")+today.get(Calendar.SECOND);
					infoClock.setText(amPm+" "+hour+":"+min+":"+sec);

					sleep(1000);
					String infoStr = bottomInfo.getText();
					
					if(infoStr != " " && (msgCntFlag == false || curStr != infoStr)){
						num = 5;
						msgCntFlag = true;
						curStr = infoStr;
					}
					else if(infoStr != " " && msgCntFlag == true){
						if(num > 0) num--;
						else{
							msgCntFlag = false;
							bottomInfo.setText(" ");
						}
					}		
				}
				catch(InterruptedException e){
					System.out.println("Thread:Error");
				}
			}
		}
	}
}
